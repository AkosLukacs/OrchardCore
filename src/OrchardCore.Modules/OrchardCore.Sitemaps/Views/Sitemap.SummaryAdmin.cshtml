@model dynamic
@{
    @* TODO resolve leading / *@
    var path = Context.Request.PathBase + "/" + Model.Sitemap.Path;
    var toggleButtonText = Model.Sitemap.Enabled ? T["Disable"].Value : T["Enable"].Value;
}

<div class="properties">
    <div class="related">
        <a asp-action="Edit"
           asp-controller="Admin"
           asp-route-id="@Model.Sitemap.Id"
           class="btn btn-primary btn-sm">@T["Edit"]</a>

        <a href="@path" class="btn btn-success btn-sm">@T["View"]</a>
        <div class="btn-group btn-group-sm">
            <a asp-action="Delete"
               asp-controller="Admin"
               asp-route-id="@Model.Sitemap.Id"
               class="btn btn-danger btn-sm"
               itemprop="RemoveUrl UnsafeUrl">@T["Delete"]</a>
            <button type="button" class="btn btn-danger dropdown-toggle dropdown-toggle-split" data-reference="parent" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                <span class="sr-only">@T["Toggle Dropdown"]</span>
            </button>
            <div class="dropdown-menu">
                <a asp-controller="Admin"
                   asp-action="Toggle"
                   asp-route-id="@Model.Sitemap.Id"
                   class="dropdown-item btn-sm" itemprop="UnsafeUrl">@toggleButtonText</a>
            </div>
        </div>
    </div>

    @if (Model.Content != null)
    {
        @await DisplayAsync(Model.Content)
        @if (!Model.Sitemap.Enabled)
        {
            <span class="badge badge-primary" title="@T["Disabled"]">
                <i class="fa fa-times" aria-hidden="true"></i> @T["Disabled"]
            </span>
        }
    }
</div>